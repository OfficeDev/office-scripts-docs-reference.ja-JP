### YamlMime:UniversalReference
items:
  - uid: 'ExcelScript!ExcelScript.CellBorderCollection:interface'
    summary: 'のプロパティを表します。 `format.borders``getCellProperties`<!-- -->, `getRowProperties`<!-- -->、 `getColumnProperties` または `format.borders` の入力パラメーター`setCellProperties`<!-- -->, `setRowProperties`<!-- -->そして`setColumnProperties`<!-- -->.'
    name: ExcelScript.CellBorderCollection
    fullName: ExcelScript.CellBorderCollection
    langs:
      - typeScript
    type: interface
    package: ExcelScript!
    children:
      - 'ExcelScript!ExcelScript.CellBorderCollection#bottom:member'
      - 'ExcelScript!ExcelScript.CellBorderCollection#diagonalDown:member'
      - 'ExcelScript!ExcelScript.CellBorderCollection#diagonalUp:member'
      - 'ExcelScript!ExcelScript.CellBorderCollection#horizontal:member'
      - 'ExcelScript!ExcelScript.CellBorderCollection#left:member'
      - 'ExcelScript!ExcelScript.CellBorderCollection#right:member'
      - 'ExcelScript!ExcelScript.CellBorderCollection#top:member'
      - 'ExcelScript!ExcelScript.CellBorderCollection#vertical:member'
  - uid: 'ExcelScript!ExcelScript.CellBorderCollection#bottom:member'
    summary: '`format.borders.bottom` プロパティを表します。'
    name: bottom
    fullName: bottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bottom?: CellBorder;'
      return:
        type:
          - 'ExcelScript!ExcelScript.CellBorder:interface'
  - uid: 'ExcelScript!ExcelScript.CellBorderCollection#diagonalDown:member'
    summary: '`format.borders.diagonalDown` プロパティを表します。'
    name: diagonalDown
    fullName: diagonalDown
    langs:
      - typeScript
    type: property
    syntax:
      content: 'diagonalDown?: CellBorder;'
      return:
        type:
          - 'ExcelScript!ExcelScript.CellBorder:interface'
  - uid: 'ExcelScript!ExcelScript.CellBorderCollection#diagonalUp:member'
    summary: '`format.borders.diagonalUp` プロパティを表します。'
    name: diagonalUp
    fullName: diagonalUp
    langs:
      - typeScript
    type: property
    syntax:
      content: 'diagonalUp?: CellBorder;'
      return:
        type:
          - 'ExcelScript!ExcelScript.CellBorder:interface'
  - uid: 'ExcelScript!ExcelScript.CellBorderCollection#horizontal:member'
    summary: '`format.borders.horizontal` プロパティを表します。'
    name: horizontal
    fullName: horizontal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'horizontal?: CellBorder;'
      return:
        type:
          - 'ExcelScript!ExcelScript.CellBorder:interface'
  - uid: 'ExcelScript!ExcelScript.CellBorderCollection#left:member'
    summary: '`format.borders.left` プロパティを表します。'
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left?: CellBorder;'
      return:
        type:
          - 'ExcelScript!ExcelScript.CellBorder:interface'
  - uid: 'ExcelScript!ExcelScript.CellBorderCollection#right:member'
    summary: '`format.borders.right` プロパティを表します。'
    name: right
    fullName: right
    langs:
      - typeScript
    type: property
    syntax:
      content: 'right?: CellBorder;'
      return:
        type:
          - 'ExcelScript!ExcelScript.CellBorder:interface'
  - uid: 'ExcelScript!ExcelScript.CellBorderCollection#top:member'
    summary: '`format.borders.top` プロパティを表します。'
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top?: CellBorder;'
      return:
        type:
          - 'ExcelScript!ExcelScript.CellBorder:interface'
  - uid: 'ExcelScript!ExcelScript.CellBorderCollection#vertical:member'
    summary: '`format.borders.vertical` プロパティを表します。'
    name: vertical
    fullName: vertical
    langs:
      - typeScript
    type: property
    syntax:
      content: 'vertical?: CellBorder;'
      return:
        type:
          - 'ExcelScript!ExcelScript.CellBorder:interface'
references:
  - uid: 'ExcelScript!ExcelScript.CellBorder:interface'
    name: CellBorder
    fullName: ExcelScript.CellBorder