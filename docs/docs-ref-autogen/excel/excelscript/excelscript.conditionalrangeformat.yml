### YamlMime:UniversalReference
items:
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat:interface'
    summary: 条件付き書式の範囲のフォント、塗りつぶし、罫線、およびその他のプロパティをカプセル化する format オブジェクト。
    name: ExcelScript.ConditionalRangeFormat
    fullName: ExcelScript.ConditionalRangeFormat
    langs:
      - typeScript
    type: interface
    package: ExcelScript!
    children:
      - 'ExcelScript!ExcelScript.ConditionalRangeFormat#getBorders:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorder:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderBottom:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderLeft:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderRight:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderTop:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalRangeFormat#getFill:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalRangeFormat#getFont:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalRangeFormat#getNumberFormat:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalRangeFormat#setNumberFormat:member(1)'
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getBorders:member(1)'
    summary: 条件付き書式の範囲全体に適用される border オブジェクトのコレクションです。
    name: getBorders()
    fullName: getBorders()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getBorders(): ConditionalRangeBorder[];'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalRangeFormat#getBorders~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorder:member(1)'
    summary: オブジェクトの名前を使用して、境界線オブジェクトを取得します。
    name: getConditionalRangeBorder(index)
    fullName: getConditionalRangeBorder(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        getConditionalRangeBorder(
                    index: ConditionalRangeBorderIndex
                ): ConditionalRangeBorder;
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalRangeBorder:interface'
        description: ''
      parameters:
        - id: index
          description: 取得する border オブジェクトのインデックス値を指定します。 詳細については、「Excel の ConditionalRangeBorderIndex」を参照してください。
          type:
            - 'ExcelScript!ExcelScript.ConditionalRangeBorderIndex:enum'
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderBottom:member(1)'
    summary: 下罫線を取得します。
    name: getConditionalRangeBorderBottom()
    fullName: getConditionalRangeBorderBottom()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getConditionalRangeBorderBottom(): ConditionalRangeBorder;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalRangeBorder:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderLeft:member(1)'
    summary: 左罫線を取得します。
    name: getConditionalRangeBorderLeft()
    fullName: getConditionalRangeBorderLeft()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getConditionalRangeBorderLeft(): ConditionalRangeBorder;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalRangeBorder:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderRight:member(1)'
    summary: 右罫線を取得します。
    name: getConditionalRangeBorderRight()
    fullName: getConditionalRangeBorderRight()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getConditionalRangeBorderRight(): ConditionalRangeBorder;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalRangeBorder:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderTop:member(1)'
    summary: 上罫線を取得します。
    name: getConditionalRangeBorderTop()
    fullName: getConditionalRangeBorderTop()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getConditionalRangeBorderTop(): ConditionalRangeBorder;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalRangeBorder:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getFill:member(1)'
    summary: 条件付き書式の範囲全体で定義される fill オブジェクトを返します。
    name: getFill()
    fullName: getFill()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFill(): ConditionalRangeFill;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalRangeFill:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getFont:member(1)'
    summary: 条件付き書式の範囲全体で定義される font オブジェクトを返します。
    name: getFont()
    fullName: getFont()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFont(): ConditionalRangeFont;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalRangeFont:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getNumberFormat:member(1)'
    summary: 指定された範囲の Excel の数値書式コードを表します。 Null が渡された場合はクリアされます。
    name: getNumberFormat()
    fullName: getNumberFormat()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNumberFormat(): string;'
      return:
        type:
          - string
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#setNumberFormat:member(1)'
    summary: 指定された範囲の Excel の数値書式コードを表します。 Null が渡された場合はクリアされます。
    name: setNumberFormat(numberFormat)
    fullName: setNumberFormat(numberFormat)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setNumberFormat(numberFormat: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: numberFormat
          description: ''
          type:
            - string
references:
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeFormat#getBorders~0:complex'
    name: 'ConditionalRangeBorder[]'
    fullName: 'ExcelScript.ConditionalRangeBorder[]'
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.ConditionalRangeBorder:interface'
        name: ConditionalRangeBorder
        fullName: ExcelScript.ConditionalRangeBorder
      - name: '[]'
        fullName: '[]'
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeBorder:interface'
    name: ConditionalRangeBorder
    fullName: ExcelScript.ConditionalRangeBorder
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeBorderIndex:enum'
    name: ConditionalRangeBorderIndex
    fullName: ExcelScript.ConditionalRangeBorderIndex
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeFill:interface'
    name: ConditionalRangeFill
    fullName: ExcelScript.ConditionalRangeFill
  - uid: 'ExcelScript!ExcelScript.ConditionalRangeFont:interface'
    name: ConditionalRangeFont
    fullName: ExcelScript.ConditionalRangeFont