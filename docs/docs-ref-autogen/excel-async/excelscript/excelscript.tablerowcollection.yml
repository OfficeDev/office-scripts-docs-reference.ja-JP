### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableRowCollection:interface'
    summary: |-
      表の一部であるすべての行のコレクションを表します。

      範囲または列の違いで、新しい行/列が追加されている場合は調整されますが、TableRow オブジェクトは、テーブルの行の物理的な位置を表しますが、データは表示しません。 つまり、データが並べ替えられている場合、または新しい行が追加された場合、テーブル行は、作成されたインデックスを引き続きポイントします。
    name: Excel.TableRowCollection
    fullName: Excel.TableRowCollection
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.TableRowCollection#add:member(1)'
      - 'excel!Excel.TableRowCollection#count:member'
      - 'excel!Excel.TableRowCollection#getCount:member(1)'
      - 'excel!Excel.TableRowCollection#getItemAt:member(1)'
      - 'excel!Excel.TableRowCollection#load:member(1)'
  - uid: 'excel!Excel.TableRowCollection#add:member(1)'
    summary: |-
      テーブルに 1 つ以上の行を追加します。 戻りオブジェクトは新しく追加された行の先頭になります。

      範囲または列の違いで、新しい行/列が追加されている場合は調整されますが、TableRow オブジェクトは、テーブルの行の物理的な位置を表しますが、データは表示しません。 つまり、データが並べ替えられている場合、または新しい行が追加された場合、テーブル行は、作成されたインデックスを引き続きポイントします。
    name: 'add(index, values)'
    fullName: 'add(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        add(
                    index?: number,
                    values?:
                        | Array<Array<boolean | string | number>>
                        | boolean
                        | string
                        | number
                ): TableRow;
      return:
        type:
          - 'excel!Excel.TableRow:interface'
        description: ''
      parameters:
        - id: index
          description: 'Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.'
          type:
            - number
        - id: values
          description: 省略可能。 テーブルの行の書式設定されていない値の 2 次元の配列。
          type:
            - 'excel!Excel.TableRowCollection#add~0:complex'
  - uid: 'excel!Excel.TableRowCollection#count:member'
    summary: テーブルの行数を返します。
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableRowCollection#getCount:member(1)'
    summary: 表の行数を取得します。
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.TableRowCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.TableRowCollection#getItemAt:member(1)'
    summary: |-
      コレクション内の位置を基に行を取得します。

      範囲または列の違いで、新しい行/列が追加されている場合は調整されますが、TableRow オブジェクトは、テーブルの行の物理的な位置を表しますが、データは表示しません。 つまり、データが並べ替えられている場合、または新しい行が追加された場合、テーブル行は、作成されたインデックスを引き続きポイントします。
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): TableRow;'
      return:
        type:
          - 'excel!Excel.TableRow:interface'
        description: ''
      parameters:
        - id: index
          description: 取得するオブジェクトのインデックス値。 0 を起点とする番号になります。
          type:
            - number
  - uid: 'excel!Excel.TableRowCollection#load:member(1)'
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、を呼び出す必要があり `context.sync()` ます。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
references:
  - uid: 'excel!Excel.TableRow:interface'
    name: TableRow
    fullName: Excel.TableRow
  - uid: 'excel!Excel.TableRowCollection#add~0:complex'
    name: |-
      | Array<Array<boolean | string | number>>
                      | boolean
                      | string
                      | number
    fullName: |-
      | Array<Array<boolean | string | number>>
                      | boolean
                      | string
                      | number
    spec.typeScript:
      - name: '| '
        fullName: '| '
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: |-
          <boolean | string | number>>
                          | boolean
                          | string
                          | number
                  
        fullName: |-
          <boolean | string | number>>
                          | boolean
                          | string
                          | number
                  
  - uid: 'excel!Excel.TableRowCollection#getCount~0:complex'
    name: ClientResult<number>
    fullName: Excel.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!Excel.ClientResult:interface'
        name: ClientResult
        fullName: Excel.ClientResult
      - name: <number>
        fullName: <number>