### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.DataBarConditionalFormat:interface'
    summary: Excel の条件付きデータバーの種類を表します。
    name: Excel.DataBarConditionalFormat
    fullName: Excel.DataBarConditionalFormat
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.DataBarConditionalFormat#axisColor:member'
      - 'excel!Excel.DataBarConditionalFormat#axisFormat:member'
      - 'excel!Excel.DataBarConditionalFormat#barDirection:member'
      - 'excel!Excel.DataBarConditionalFormat#load:member(1)'
      - 'excel!Excel.DataBarConditionalFormat#lowerBoundRule:member'
      - 'excel!Excel.DataBarConditionalFormat#negativeFormat:member'
      - 'excel!Excel.DataBarConditionalFormat#positiveFormat:member'
      - 'excel!Excel.DataBarConditionalFormat#showDataBarOnly:member'
      - 'excel!Excel.DataBarConditionalFormat#upperBoundRule:member'
  - uid: 'excel!Excel.DataBarConditionalFormat#axisColor:member'
    summary: 'フォーム RRGGBB (例: "FFA500") の軸線の色を表す HTML カラーコード、 \# または名前付きの html 色 (例: 「オレンジ」)。 軸が存在しない場合または設定されていない場合は、"" (空の文字列)。'
    name: axisColor
    fullName: axisColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisColor: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.DataBarConditionalFormat#axisFormat:member'
    summary: Excel データバーの軸をどのように判別するかを表します。
    name: axisFormat
    fullName: axisFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisFormat: ConditionalDataBarAxisFormat;'
      return:
        type:
          - 'excel!Excel.ConditionalDataBarAxisFormat:enum'
  - uid: 'excel!Excel.DataBarConditionalFormat#barDirection:member'
    summary: データバーのグラフィックスの基準となる方向を指定します。
    name: barDirection
    fullName: barDirection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'barDirection: ConditionalDataBarDirection;'
      return:
        type:
          - 'excel!Excel.ConditionalDataBarDirection:enum'
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let range = sheet.getRange("B8:E13");
              let conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.dataBar);
              conditionalFormat.dataBar.barDirection = Excel.ConditionalDataBarDirection.leftToRight;

              await context.sync();
          }
          ```
  - uid: 'excel!Excel.DataBarConditionalFormat#load:member(1)'
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、を呼び出す必要があり `context.sync()` ます。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.DataBarConditionalFormat#lowerBoundRule:member'
    summary: 'データ バーの下限値 (および該当する場合はその計算方法) を構成するルール。 `ConditionalDataBarRule`オブジェクトは JSON オブジェクトとして設定する必要があります ( `x.lowerBoundRule = {...}` の代わりに使用します)。`x.lowerBoundRule.formula = ...`<!-- -->).'
    name: lowerBoundRule
    fullName: lowerBoundRule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lowerBoundRule: ConditionalDataBarRule;'
      return:
        type:
          - 'excel!Excel.ConditionalDataBarRule:interface'
  - uid: 'excel!Excel.DataBarConditionalFormat#negativeFormat:member'
    summary: Excel データバーの軸の左側にあるすべての値の表現。
    name: negativeFormat
    fullName: negativeFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly negativeFormat: ConditionalDataBarNegativeFormat;'
      return:
        type:
          - 'excel!Excel.ConditionalDataBarNegativeFormat:interface'
  - uid: 'excel!Excel.DataBarConditionalFormat#positiveFormat:member'
    summary: Excel データバーの軸の右側にあるすべての値の表現。
    name: positiveFormat
    fullName: positiveFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly positiveFormat: ConditionalDataBarPositiveFormat;'
      return:
        type:
          - 'excel!Excel.ConditionalDataBarPositiveFormat:interface'
  - uid: 'excel!Excel.DataBarConditionalFormat#showDataBarOnly:member'
    summary: true の場合、データ バーが適用されているセルの値を非表示にします。
    name: showDataBarOnly
    fullName: showDataBarOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showDataBarOnly: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.DataBarConditionalFormat#upperBoundRule:member'
    summary: 'データ バーの上限値 (および該当する場合はその計算方法) を構成するルール。 `ConditionalDataBarRule`オブジェクトは JSON オブジェクトとして設定する必要があります ( `x.upperBoundRule = {...}` の代わりに使用します)。`x.upperBoundRule.formula = ...`<!-- -->).'
    name: upperBoundRule
    fullName: upperBoundRule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'upperBoundRule: ConditionalDataBarRule;'
      return:
        type:
          - 'excel!Excel.ConditionalDataBarRule:interface'
references:
  - uid: 'excel!Excel.ConditionalDataBarAxisFormat:enum'
    name: ConditionalDataBarAxisFormat
    fullName: Excel.ConditionalDataBarAxisFormat
  - uid: 'excel!Excel.ConditionalDataBarDirection:enum'
    name: ConditionalDataBarDirection
    fullName: Excel.ConditionalDataBarDirection
  - uid: 'excel!Excel.ConditionalDataBarRule:interface'
    name: ConditionalDataBarRule
    fullName: Excel.ConditionalDataBarRule
  - uid: 'excel!Excel.ConditionalDataBarNegativeFormat:interface'
    name: ConditionalDataBarNegativeFormat
    fullName: Excel.ConditionalDataBarNegativeFormat
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat:interface'
    name: ConditionalDataBarPositiveFormat
    fullName: Excel.ConditionalDataBarPositiveFormat