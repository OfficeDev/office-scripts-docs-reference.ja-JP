### YamlMime:TSType
name: Excel.WorksheetProtection
uid: excel!Excel.WorksheetProtection:interface
package: excel!
fullName: Excel.WorksheetProtection
summary: シート オブジェクトの保護を表します。
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: options
  uid: excel!Excel.WorksheetProtection#options:member
  package: excel!
  fullName: options
  summary: ワークシートの保護オプションを指定します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly options: WorksheetProtectionOptions;'
    return:
      type: <xref uid="excel!Excel.WorksheetProtectionOptions:interface" />
- name: protected
  uid: excel!Excel.WorksheetProtection#protected:member
  package: excel!
  fullName: protected
  summary: ワークシートが保護されているかどうかを指定します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly protected: boolean;'
    return:
      type: boolean
methods:
- name: load(propertyNames)
  uid: excel!Excel.WorksheetProtection#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type: string | string[]
    return:
      type: void
      description: ''
- name: protect(options, password)
  uid: excel!Excel.WorksheetProtection#protect:member(1)
  package: excel!
  fullName: protect(options, password)
  summary: ワークシートを保護します。 ワークシートが既に保護されている場合は、失敗します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'protect(options?: WorksheetProtectionOptions, password?: string): void;'
    parameters:
    - id: options
      description: 省略可能。 シートの保護のオプション。
      type: <xref uid="excel!Excel.WorksheetProtectionOptions:interface" />
    - id: password
      description: 省略可能。 シート保護のパスワードを入力します。
      type: string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!activeSheet.protection.protected) {\n        activeSheet.protection.protect();\n    }\n}\n```"
- name: unprotect(password)
  uid: excel!Excel.WorksheetProtection#unprotect:member(1)
  package: excel!
  fullName: unprotect(password)
  summary: ワークシートの保護を解除します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'unprotect(password?: string): void;'
    parameters:
    - id: password
      description: シートの保護パスワード。
      type: string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\nasync function main(context: Excel.RequestContext) {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.protection.unprotect();\n}\n```"
metadata:
  ms.openlocfilehash: 21c640e7dff12cda054af4591bec3d79116ca0e4
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49419832"
