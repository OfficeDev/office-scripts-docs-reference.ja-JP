### YamlMime:TSType
name: Excel.CommentReply
uid: excel!Excel.CommentReply:interface
package: excel!
fullName: Excel.CommentReply
summary: ブック内のコメントの返信を表します。
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: authorEmail
  uid: excel!Excel.CommentReply#authorEmail:member
  package: excel!
  fullName: authorEmail
  summary: コメント返信作成者のメール アドレスを取得します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly authorEmail: string;'
    return:
      type: string
- name: authorName
  uid: excel!Excel.CommentReply#authorName:member
  package: excel!
  fullName: authorName
  summary: コメント返信作成者の名前を取得します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly authorName: string;'
    return:
      type: string
- name: content
  uid: excel!Excel.CommentReply#content:member
  package: excel!
  fullName: content
  summary: コメントの返信のコンテンツ。 文字列はテキスト形式です。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'content: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Comments\");\n    let comment = sheet.comments.getItemAt(0);\n    let reply = comment.replies.getItemAt(0);\n    reply.load(\"content\");\n    // Sync to load the content of the comment reply.\n    await context.sync();\n\n    // Append \"Please!\" to the end of the comment reply.\n    reply.content += \" Please!\";\n    await context.sync();\n}\n```"
- name: creationDate
  uid: excel!Excel.CommentReply#creationDate:member
  package: excel!
  fullName: creationDate
  summary: コメント返信の作成日時を取得します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly creationDate: Date;'
    return:
      type: Date
- name: id
  uid: excel!Excel.CommentReply#id:member
  package: excel!
  fullName: id
  summary: コメントの返信識別子を指定します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: mentions
  uid: excel!Excel.CommentReply#mentions:member
  package: excel!
  fullName: mentions
  summary: コメントに記載されているエンティティ (ユーザーなど)。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly mentions: CommentMention[];'
    return:
      type: <xref uid="excel!Excel.CommentMention:interface" />[]
- name: resolved
  uid: excel!Excel.CommentReply#resolved:member
  package: excel!
  fullName: resolved
  summary: コメントの返信状態。 値 "true" は、応答が解決された状態であることを意味します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly resolved: boolean;'
    return:
      type: boolean
- name: richContent
  uid: excel!Excel.CommentReply#richContent:member
  package: excel!
  fullName: richContent
  summary: リッチコメントの内容 (コメント内のメンションなど)。 この文字列は、エンドユーザーに表示されることを意図したものではありません。 アドインでは、リッチコメントコンテンツを解析するためにのみ使用する必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly richContent: string;'
    return:
      type: string
methods:
- name: delete()
  uid: excel!Excel.CommentReply#delete:member(1)
  package: excel!
  fullName: delete()
  summary: コメント返信を削除します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    // Remove the first comment reply from this worksheet's first comment.\n    let sheet = context.workbook.worksheets.getItem(\"Comments\");\n    let comment = sheet.comments.getItemAt(0);\n    comment.replies.getItemAt(0).delete();\n    await context.sync();\n}\n```"
- name: getLocation()
  uid: excel!Excel.CommentReply#getLocation:member(1)
  package: excel!
  fullName: getLocation()
  summary: このコメントの返信があるセルを取得します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLocation(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getParentComment()
  uid: excel!Excel.CommentReply#getParentComment:member(1)
  package: excel!
  fullName: getParentComment()
  summary: この返信の親コメントを取得します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getParentComment(): Comment;'
    return:
      type: <xref uid="excel!Excel.Comment:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.CommentReply#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type: string | string[]
    return:
      type: void
      description: ''
- name: updateMentions(contentWithMentions)
  uid: excel!Excel.CommentReply#updateMentions:member(1)
  package: excel!
  fullName: updateMentions(contentWithMentions)
  summary: 特別に書式設定された文字列とメンションの一覧を使用して、コメントの内容を更新します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'updateMentions(contentWithMentions: CommentRichContent): void;'
    parameters:
    - id: contentWithMentions
      description: コメントの内容を示します。 これには、特別に書式設定された文字列と、Excel で表示されるときに文字列に解析されるメンションの一覧が含まれています。
      type: <xref uid="excel!Excel.CommentRichContent:interface" />
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: bf48e6926ecd58e7f38fb938eb6eedf511618c1f
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49414734"
