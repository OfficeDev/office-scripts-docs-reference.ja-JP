### YamlMime:TSType
name: Excel.CustomXmlPartScopedCollection
uid: excel!Excel.CustomXmlPartScopedCollection:interface
package: excel!
fullName: Excel.CustomXmlPartScopedCollection
summary: カスタム XML パーツのスコープ付きコレクション。 スコープ設定されたコレクションは、いくつかの操作 (名前空間によるフィルターなど) の結果です。 スコープ指定されたコレクションは、スコープを追加することはできません。
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: getCount()
  uid: excel!Excel.CustomXmlPartScopedCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: コレクションに含まれる CustomXML パーツの数を取得します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): ClientResult<number>;'
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;
      description: ''
- name: getItem(id)
  uid: excel!Excel.CustomXmlPartScopedCollection#getItem:member(1)
  package: excel!
  fullName: getItem(id)
  summary: ID に基づいて、カスタム XML パーツを取得します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(id: string): CustomXmlPart;'
    parameters:
    - id: id
      description: 取得するオブジェクトの ID を指定します。
      type: string
    return:
      type: <xref uid="excel!Excel.CustomXmlPart:interface" />
      description: ''
- name: getItemOrNullObject(id)
  uid: excel!Excel.CustomXmlPartScopedCollection#getItemOrNullObject:member(1)
  package: excel!
  fullName: getItemOrNullObject(id)
  summary: ID に基づいて、カスタム XML パーツを取得します。 CustomXmlPart が存在しない場合、返されるオブジェクトの isNull プロパティは true になります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(id: string): CustomXmlPart;'
    parameters:
    - id: id
      description: 取得するオブジェクトの ID を指定します。
      type: string
    return:
      type: <xref uid="excel!Excel.CustomXmlPart:interface" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let settings = context.workbook.settings;\n    let xmlPartIDSetting = settings.getItemOrNullObject(\"ContosoReviewXmlPartId\").load(\"value\");\n    await context.sync();\n\n    if (xmlPartIDSetting.value) {   \n        let customXmlPart = context.workbook.customXmlParts.getItem(xmlPartIDSetting.value);\n        let xmlBlob = customXmlPart.getXml();\n        customXmlPart.delete();\n        customXmlPart = context.workbook.customXmlParts.getItemOrNullObject(xmlPartIDSetting.value);\n\n        await context.sync();\n\n        if (customXmlPart.isNullObject) {\n            $(\"#display-xml\").text(`The XML part with the id ${xmlPartIDSetting.value} has been deleted.`);\n\n            // Delete the unneeded setting too.\n            xmlPartIDSetting.delete();            \n        } else {\n            let readableXml = addLineBreaksToXML(xmlBlob.value);\n            let strangeMessage = `This is strange. The XML part with the id ${xmlPartIDSetting.value} has not been deleted:\\n${readableXml}`\n            $(\"#display-xml\").text(strangeMessage);\n        }\n\n        await context.sync();\n    }\n}\n```"
- name: getOnlyItem()
  uid: excel!Excel.CustomXmlPartScopedCollection#getOnlyItem:member(1)
  package: excel!
  fullName: getOnlyItem()
  summary: コレクションに含まれる項目が 1 つだけの場合、このメソッドはその項目を返します。 それ以外の場合、このメソッドはエラーを生成します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getOnlyItem(): CustomXmlPart;'
    return:
      type: <xref uid="excel!Excel.CustomXmlPart:interface" />
      description: ''
- name: getOnlyItemOrNullObject()
  uid: excel!Excel.CustomXmlPartScopedCollection#getOnlyItemOrNullObject:member(1)
  package: excel!
  fullName: getOnlyItemOrNullObject()
  summary: コレクションに含まれる項目が 1 つだけの場合、このメソッドはその項目を返します。 それ以外の場合、このメソッドは Null を返します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getOnlyItemOrNullObject(): CustomXmlPart;'
    return:
      type: <xref uid="excel!Excel.CustomXmlPart:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.CustomXmlPartScopedCollection#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 4aee09aacca18c04aa8736a31e2a03ef80a62a4d
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49414042"
