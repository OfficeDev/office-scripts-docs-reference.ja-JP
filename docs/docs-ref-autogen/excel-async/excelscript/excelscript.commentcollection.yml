### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.CommentCollection:interface'
    summary: ブックの一部である comment オブジェクトのコレクションを表します。
    name: Excel.CommentCollection
    fullName: Excel.CommentCollection
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.CommentCollection#add:member(1)'
      - 'excel!Excel.CommentCollection#getItem:member(1)'
      - 'excel!Excel.CommentCollection#getItemByCell:member(1)'
      - 'excel!Excel.CommentCollection#getItemByReplyId:member(1)'
      - 'excel!Excel.CommentCollection#load:member(1)'
  - uid: 'excel!Excel.CommentCollection#add:member(1)'
    summary: 指定したセルで、指定した内容の新しいコメントを作成します。 `InvalidArgument`指定した範囲が1つのセルより大きい場合は、エラーがスローされます。
    name: 'add(cellAddress, content, contentType)'
    fullName: 'add(cellAddress, content, contentType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        add(
                    cellAddress: Range | string,
                    content: CommentRichContent | string,
                    contentType?: ContentType
                ): Comment;
      return:
        type:
          - 'excel!Excel.Comment:interface'
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Comments");

              // Note that an InvalidArgument error will be thrown if multiple cells passed to `comment.add`.
              sheet.comments.add("A2", "TODO: add data.");
              await context.sync();
          }
          ```
      parameters:
        - id: cellAddress
          description: コメントを追加するセルを指定します。 Range オブジェクトまたは文字列を指定できます。 文字列型 (string) の場合は、シート名を含む完全な住所が含まれている必要があります。 `InvalidArgument`指定した範囲が1つのセルより大きい場合は、エラーがスローされます。
          type:
            - 'excel!Excel.CommentCollection#add~0:complex'
        - id: content
          description: コメントの内容を示します。 文字列または CommentRichContent オブジェクトのいずれかを指定できます。 文字列はテキスト形式に対して使用されます。 CommentRichContent オブジェクトでは、メンションなど、他のコメント機能を使用できます。
          type:
            - 'excel!Excel.CommentCollection#add~1:complex'
        - id: contentType
          description: 省略可能です。 コメント内に含まれるコンテンツの種類。 既定値は enum です。`ContentType.Plain`<!-- -->.
          type:
            - 'excel!Excel.ContentType:enum'
  - uid: 'excel!Excel.CommentCollection#getItem:member(1)'
    summary: ID に基づいてコレクションからコメントを取得します。
    name: getItem(commentId)
    fullName: getItem(commentId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(commentId: string): Comment;'
      return:
        type:
          - 'excel!Excel.Comment:interface'
        description: ''
      parameters:
        - id: commentId
          description: コメントの識別子。
          type:
            - string
  - uid: 'excel!Excel.CommentCollection#getItemByCell:member(1)'
    summary: 指定したセルからコメントを取得します。
    name: getItemByCell(cellAddress)
    fullName: getItemByCell(cellAddress)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemByCell(cellAddress: Range | string): Comment;'
      return:
        type:
          - 'excel!Excel.Comment:interface'
        description: ''
      parameters:
        - id: cellAddress
          description: コメントがあるセルを指定します。 Range オブジェクトまたは文字列を指定できます。 文字列型 (string) の場合は、シート名を含む完全な住所が含まれている必要があります。 `InvalidArgument`指定した範囲が1つのセルより大きい場合は、エラーがスローされます。
          type:
            - 'excel!Excel.CommentCollection#getItemByCell~0:complex'
  - uid: 'excel!Excel.CommentCollection#getItemByReplyId:member(1)'
    summary: 指定した返信が接続されているコメントを取得します。
    name: getItemByReplyId(replyId)
    fullName: getItemByReplyId(replyId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemByReplyId(replyId: string): Comment;'
      return:
        type:
          - 'excel!Excel.Comment:interface'
        description: ''
      parameters:
        - id: replyId
          description: コメント応答の識別子。
          type:
            - string
  - uid: 'excel!Excel.CommentCollection#load:member(1)'
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、を呼び出す必要があり `context.sync()` ます。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
references:
  - uid: 'excel!Excel.Comment:interface'
    name: Comment
    fullName: Excel.Comment
  - uid: 'excel!Excel.CommentCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:interface'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.CommentCollection#add~1:complex'
    name: CommentRichContent | string
    fullName: Excel.CommentRichContent | string
    spec.typeScript:
      - uid: 'excel!Excel.CommentRichContent:interface'
        name: CommentRichContent
        fullName: Excel.CommentRichContent
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.ContentType:enum'
    name: ContentType
    fullName: Excel.ContentType
  - uid: 'excel!Excel.CommentCollection#getItemByCell~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:interface'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'