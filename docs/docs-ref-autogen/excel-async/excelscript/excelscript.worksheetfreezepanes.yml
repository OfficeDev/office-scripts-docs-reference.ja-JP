### YamlMime:TSType
name: Excel.WorksheetFreezePanes
uid: excel!Excel.WorksheetFreezePanes:interface
package: excel!
fullName: Excel.WorksheetFreezePanes
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: freezeAt(frozenRange)
  uid: excel!Excel.WorksheetFreezePanes#freezeAt:member(1)
  package: excel!
  fullName: freezeAt(frozenRange)
  summary: アクティブなワークシート ビューに固定セルを設定します。 指定される範囲は、最上位および左端のウィンドウで固定されるセルに対応します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'freezeAt(frozenRange: Range | string): void;'
    parameters:
    - id: frozenRange
      description: 固定するセルを表す範囲、または固定されていないすべてのウィンドウを削除する場合は null。
      type: <xref uid="excel!Excel.Range:interface" /> | string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the specified range in top-and-left-most pane of the worksheet.\n    sheet.freezePanes.freezeAt(sheet.getRange(\"H2:K5\"));\n\n    await context.sync();\n}\n```"
- name: freezeColumns(count)
  uid: excel!Excel.WorksheetFreezePanes#freezeColumns:member(1)
  package: excel!
  fullName: freezeColumns(count)
  summary: ワークシートの最初の列 (複数可) を所定の場所に固定します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'freezeColumns(count?: number): void;'
    parameters:
    - id: count
      description: 固定する列の数 (省略可能)、またはすべての列を固定解除するゼロ
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the first two columns in the worksheet.\n    sheet.freezePanes.freezeColumns(2);\n\n    await context.sync();\n}\n```"
- name: freezeRows(count)
  uid: excel!Excel.WorksheetFreezePanes#freezeRows:member(1)
  package: excel!
  fullName: freezeRows(count)
  summary: ワークシートの最初の行 (複数可) を所定の場所に固定します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'freezeRows(count?: number): void;'
    parameters:
    - id: count
      description: 固定する行数 (省略可能)、またはすべての行を固定解除するためのゼロ
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the top two rows in the worksheet.\n    sheet.freezePanes.freezeRows(2);\n\n    await context.sync();\n}\n```"
- name: getLocation()
  uid: excel!Excel.WorksheetFreezePanes#getLocation:member(1)
  package: excel!
  fullName: getLocation()
  summary: アクティブなワークシート ビュー内の固定セルを記述する範囲を取得します。 固定範囲は、上端と左端のウィンドウ枠で固定されているセルに対応します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLocation(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getLocationOrNullObject()
  uid: excel!Excel.WorksheetFreezePanes#getLocationOrNullObject:member(1)
  package: excel!
  fullName: getLocationOrNullObject()
  summary: アクティブなワークシート ビュー内の固定セルを記述する範囲を取得します。 固定範囲は、上端と左端のウィンドウ枠で固定されているセルに対応します。 ペインが固定されていない場合は、null オブジェクトを返します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLocationOrNullObject(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let frozenRange = sheet.freezePanes.getLocationOrNullObject();\n    frozenRange.load(\"address\");\n\n    await context.sync();\n\n    if (frozenRange.isNullObject) {\n        console.log(`The worksheet does not contain a frozen pane.`);\n    } else {\n        console.log(`The address of the frozen range (cells that are frozen in the top-and-left-most pane) is \"${frozenRange.address}\"`);\n    }\n}\n```"
- name: load(propertyNames)
  uid: excel!Excel.WorksheetFreezePanes#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type: string | string[]
    return:
      type: void
      description: ''
- name: unfreeze()
  uid: excel!Excel.WorksheetFreezePanes#unfreeze:member(1)
  package: excel!
  fullName: unfreeze()
  summary: ワークシートからすべての固定ウィンドウを削除します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'unfreeze(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    sheet.freezePanes.unfreeze();\n\n    await context.sync();\n}\n```"
metadata:
  ms.openlocfilehash: 1d336cf2ff466b64a59f0e70a1392c4a77081c18
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49412609"
