### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.WorksheetFreezePanes:interface'
    name: Excel.WorksheetFreezePanes
    fullName: Excel.WorksheetFreezePanes
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.WorksheetFreezePanes#freezeAt:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#freezeColumns:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#freezeRows:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#getLocationOrNullObject:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#load:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#unfreeze:member(1)'
  - uid: 'excel!Excel.WorksheetFreezePanes#freezeAt:member(1)'
    summary: アクティブなワークシート ビューに固定セルを設定します。 指定される範囲は、最上位および左端のウィンドウで固定されるセルに対応します。
    name: freezeAt(frozenRange)
    fullName: freezeAt(frozenRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'freezeAt(frozenRange: Range | string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");

              // Freeze the specified range in top-and-left-most pane of the worksheet.
              sheet.freezePanes.freezeAt(sheet.getRange("H2:K5"));

              await context.sync();
          }
          ```
      parameters:
        - id: frozenRange
          description: 固定するセルを表す範囲、または固定されていないすべてのウィンドウを削除する場合は null。
          type:
            - 'excel!Excel.WorksheetFreezePanes#freezeAt~0:complex'
  - uid: 'excel!Excel.WorksheetFreezePanes#freezeColumns:member(1)'
    summary: ワークシートの最初の列 (複数可) を所定の場所に固定します。
    name: freezeColumns(count)
    fullName: freezeColumns(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'freezeColumns(count?: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");

              // Freeze the first two columns in the worksheet.
              sheet.freezePanes.freezeColumns(2);

              await context.sync();
          }
          ```
      parameters:
        - id: count
          description: 固定する列の数 (省略可能)、またはすべての列を固定解除するゼロ
          type:
            - number
  - uid: 'excel!Excel.WorksheetFreezePanes#freezeRows:member(1)'
    summary: ワークシートの最初の行 (複数可) を所定の場所に固定します。
    name: freezeRows(count)
    fullName: freezeRows(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'freezeRows(count?: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");

              // Freeze the top two rows in the worksheet.
              sheet.freezePanes.freezeRows(2);

              await context.sync();
          }
          ```
      parameters:
        - id: count
          description: 固定する行数 (省略可能)、またはすべての行を固定解除するためのゼロ
          type:
            - number
  - uid: 'excel!Excel.WorksheetFreezePanes#getLocationOrNullObject:member(1)'
    summary: アクティブなワークシート ビュー内の固定セルを記述する範囲を取得します。 固定範囲は、上端と左端のウィンドウ枠で固定されているセルに対応します。 ペインが固定されていない場合は、null オブジェクトを返します。
    name: getLocationOrNullObject()
    fullName: getLocationOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLocationOrNullObject(): Range;'
      return:
        type:
          - 'excel!Excel.Range:interface'
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let frozenRange = sheet.freezePanes.getLocationOrNullObject();
              frozenRange.load("address");

              await context.sync();

              if (frozenRange.isNullObject) {
                  console.log(`The worksheet does not contain a frozen pane.`);
              } else {
                  console.log(`The address of the frozen range (cells that are frozen in the top-and-left-most pane) is "${frozenRange.address}"`);
              }
          }
          ```
  - uid: 'excel!Excel.WorksheetFreezePanes#load:member(1)'
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、を呼び出す必要があり `context.sync()` ます。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.WorksheetFreezePanes#unfreeze:member(1)'
    summary: ワークシートからすべての固定ウィンドウを削除します。
    name: unfreeze()
    fullName: unfreeze()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unfreeze(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              sheet.freezePanes.unfreeze();

              await context.sync();
          }
          ```
references:
  - uid: 'excel!Excel.WorksheetFreezePanes#freezeAt~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:interface'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.Range:interface'
    name: Range
    fullName: Excel.Range