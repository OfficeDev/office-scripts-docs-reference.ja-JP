### YamlMime:TSType
name: Excel.Application
uid: excel!Excel.Application:interface
package: excel!
fullName: Excel.Application
summary: ブックを管理する Excel アプリケーションを表します。
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: calculationEngineVersion
  uid: excel!Excel.Application#calculationEngineVersion:member
  package: excel!
  fullName: calculationEngineVersion
  summary: 最後の完全な再計算に使用した Excel 計算エンジンのバージョンを返します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly calculationEngineVersion: number;'
    return:
      type: number
- name: calculationMode
  uid: excel!Excel.Application#calculationMode:member
  package: excel!
  fullName: calculationMode
  summary: CalculationMode の定数によって定義されている、ブックで使用されている計算モードを返します。 可能な値は次のとおりです。 `Automatic`<!-- -->、Excel は再計算を制御します。 `AutomaticExceptTables`<!-- -->、Excel は再計算を制御しますが、テーブル内の変更は無視します。 `Manual`<!-- -->、ユーザーが要求すると、計算が行われます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      calculationMode:
                  | CalculationMode
                  | "Automatic"
                  | "AutomaticExceptTables"
                  | "Manual";
    return:
      type: >-
        | <xref uid="excel!Excel.CalculationMode:enum" />
                    | "Automatic"
                    | "AutomaticExceptTables"
                    | "Manual"
- name: calculationState
  uid: excel!Excel.Application#calculationState:member
  package: excel!
  fullName: calculationState
  summary: アプリケーションの計算の状態を返します。 詳細については、Excel.CalculationState をご覧ください。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      readonly calculationState:
                  | CalculationState
                  | "Done"
                  | "Calculating"
                  | "Pending";
    return:
      type: >-
        | <xref uid="excel!Excel.CalculationState:enum" />
                    | "Done"
                    | "Calculating"
                    | "Pending"
- name: cultureInfo
  uid: excel!Excel.Application#cultureInfo:member
  package: excel!
  fullName: cultureInfo
  summary: 現在のシステムのカルチャ設定に基づく情報を提供します。 これには、カルチャ名、数値形式、およびその他のカルチャに依存する設定が含まれます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly cultureInfo: CultureInfo;'
    return:
      type: <xref uid="excel!Excel.CultureInfo:interface" />
- name: decimalSeparator
  uid: excel!Excel.Application#decimalSeparator:member
  package: excel!
  fullName: decimalSeparator
  summary: 数値の小数点の記号として使用される文字列を取得します。 これは、Excel のローカル設定に基づいています。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly decimalSeparator: string;'
    return:
      type: string
- name: iterativeCalculation
  uid: excel!Excel.Application#iterativeCalculation:member
  package: excel!
  fullName: iterativeCalculation
  summary: 反復計算の設定を返します。 Windows と Mac の Excel では、設定は Excel アプリケーションに適用されます。 Web 上の Excel およびその他のプラットフォームでは、設定は作業中のブックに適用されます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly iterativeCalculation: IterativeCalculation;'
    return:
      type: <xref uid="excel!Excel.IterativeCalculation:interface" />
- name: thousandsSeparator
  uid: excel!Excel.Application#thousandsSeparator:member
  package: excel!
  fullName: thousandsSeparator
  summary: 数値の小数点の左側にある数字のグループを区切るために使用される文字列を取得します。 これは、Excel のローカル設定に基づいています。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly thousandsSeparator: string;'
    return:
      type: string
- name: useSystemSeparators
  uid: excel!Excel.Application#useSystemSeparators:member
  package: excel!
  fullName: useSystemSeparators
  summary: Excel のシステム区切り記号を有効にするかどうかを指定します。 システムの区切り記号には、小数点の記号と桁区切り記号が含まれます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly useSystemSeparators: boolean;'
    return:
      type: boolean
methods:
- name: calculate(calculationType)
  uid: excel!Excel.Application#calculate:member(1)
  package: excel!
  fullName: calculate(calculationType)
  summary: Excel で現在開いているすべてのブックを再計算します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      calculate(
                  calculationType:
                      | CalculationType
                      | "Recalculate"
                      | "Full"
                      | "FullRebuild"
              ): void;
    parameters:
    - id: calculationType
      description: 使用する計算の種類を指定します。 詳細については、「Excel の種類」を参照してください。
      type: "| <xref uid=\"excel!Excel.CalculationType:enum\" />\n                | \"Recalculate\"\n                | \"Full\"\n                | \"FullRebuild\"\n        "
    return:
      type: void
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Application#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type: string | string[]
    return:
      type: void
      description: ''
- name: suspendApiCalculationUntilNextSync()
  uid: excel!Excel.Application#suspendApiCalculationUntilNextSync:member(1)
  package: excel!
  fullName: suspendApiCalculationUntilNextSync()
  summary: 次の "context.sync()" が呼び出されるまで、計算を中断します。設定されると、依存関係が確実に伝達されるようにブックを再計算するのは開発者の責任です。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'suspendApiCalculationUntilNextSync(): void;'
    return:
      type: void
      description: ''
- name: suspendScreenUpdatingUntilNextSync()
  uid: excel!Excel.Application#suspendScreenUpdatingUntilNextSync:member(1)
  package: excel!
  fullName: suspendScreenUpdatingUntilNextSync()
  summary: >-
    次の呼び出しが呼び出されるまで、画面の更新 `context.sync()` を中断します。


    **注**: 繰り返し呼び出さない `suspendScreenUpdatingUntilNextSync` でください (ループの場合など)。 呼び出しが繰り返し行われると、Excel ウィンドウがちらつくようになります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'suspendScreenUpdatingUntilNextSync(): void;'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: ebedb8b1b7c0a22547a6ad13f9bf194a9846d7cb
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49414556"
