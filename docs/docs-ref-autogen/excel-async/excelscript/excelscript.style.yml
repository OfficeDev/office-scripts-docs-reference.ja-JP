### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Style:interface'
    summary: スタイルの形式およびその他のプロパティをカプセル化するオブジェクト。
    name: Excel.Style
    fullName: Excel.Style
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.Style#autoIndent:member'
      - 'excel!Excel.Style#borders:member'
      - 'excel!Excel.Style#builtIn:member'
      - 'excel!Excel.Style#delete:member(1)'
      - 'excel!Excel.Style#fill:member'
      - 'excel!Excel.Style#font:member'
      - 'excel!Excel.Style#formulaHidden:member'
      - 'excel!Excel.Style#horizontalAlignment:member'
      - 'excel!Excel.Style#includeAlignment:member'
      - 'excel!Excel.Style#includeBorder:member'
      - 'excel!Excel.Style#includeFont:member'
      - 'excel!Excel.Style#includeNumber:member'
      - 'excel!Excel.Style#includePatterns:member'
      - 'excel!Excel.Style#includeProtection:member'
      - 'excel!Excel.Style#indentLevel:member'
      - 'excel!Excel.Style#load:member(1)'
      - 'excel!Excel.Style#locked:member'
      - 'excel!Excel.Style#name:member'
      - 'excel!Excel.Style#numberFormat:member'
      - 'excel!Excel.Style#numberFormatLocal:member'
      - 'excel!Excel.Style#readingOrder:member'
      - 'excel!Excel.Style#shrinkToFit:member'
      - 'excel!Excel.Style#textOrientation:member'
      - 'excel!Excel.Style#verticalAlignment:member'
      - 'excel!Excel.Style#wrapText:member'
  - uid: 'excel!Excel.Style#autoIndent:member'
    summary: セル内の文字列の配置が均等分布に設定されている場合に、文字列を自動的にインデントするかどうかを指定します。
    name: autoIndent
    fullName: autoIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'autoIndent: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#borders:member'
    summary: 4 つの辺の罫線のスタイルを表す、4 つの Border オブジェクトのコレクション。
    name: borders
    fullName: borders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly borders: RangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection:interface'
  - uid: 'excel!Excel.Style#builtIn:member'
    summary: スタイルが組み込みのスタイルであるかどうかを指定します。
    name: builtIn
    fullName: builtIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly builtIn: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#delete:member(1)'
    summary: このスタイルを削除します。
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let style = context.workbook.styles.getItem("Diagonal Orientation Style");

              // Delete the diagonal orientation style from the style collection.
              // Styles are in the Home tab ribbon.
              style.delete();

              await context.sync();

              console.log("Successfully deleted the diagonal orientation style from the Home tab ribbon.");
          }
          ```
  - uid: 'excel!Excel.Style#fill:member'
    summary: スタイルの塗りつぶし。
    name: fill
    fullName: fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: RangeFill;'
      return:
        type:
          - 'excel!Excel.RangeFill:interface'
  - uid: 'excel!Excel.Style#font:member'
    summary: スタイルのフォントを表す Font オブジェクト。
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: RangeFont;'
      return:
        type:
          - 'excel!Excel.RangeFont:interface'
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let style = context.workbook.styles.getItem("Normal");
              style.font.load("bold, color, italic, name, size");
              style.fill.load("color");

              await context.sync();

              console.log("Bold: " + style.font.bold);
              console.log("Font color: " + style.font.color);
              console.log("Italic: " + style.font.italic);
              console.log("Name: " + style.font.name);
              console.log("Size: " + style.font.size);
              console.log("Fill color: " + style.fill.color);
          }
          ```
  - uid: 'excel!Excel.Style#formulaHidden:member'
    summary: ワークシートが保護されているときに、数式を非表示にするかどうかを指定します。
    name: formulaHidden
    fullName: formulaHidden
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulaHidden: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#horizontalAlignment:member'
    summary: スタイルでの水平方向の配置を表します。 詳細については、「Excel の配置」を参照してください。
    name: horizontalAlignment
    fullName: horizontalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        horizontalAlignment:
                    | HorizontalAlignment
                    | "General"
                    | "Left"
                    | "Center"
                    | "Right"
                    | "Fill"
                    | "Justify"
                    | "CenterAcrossSelection"
                    | "Distributed";
      return:
        type:
          - 'excel!Excel.Style#horizontalAlignment~0:complex'
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let worksheet = context.workbook.worksheets.getItem("Sample");
              let range = worksheet.getRange("A1:E1");

              // Apply built-in style. 
              // Styles are in the Home tab ribbon.
              range.style = Excel.BuiltInStyle.neutral;
              range.format.horizontalAlignment = "Right";

              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Style#includeAlignment:member'
    summary: スタイルに自動インデント、水平方向の配置、垂直方向の配置、WrapText、IndentLevel、および TextOrientation プロパティを含めるかどうかを指定します。
    name: includeAlignment
    fullName: includeAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeAlignment: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#includeBorder:member'
    summary: スタイルに、Color、ColorIndex、LineStyle、および Weight の各境界線のプロパティが含まれるかどうかを指定します。
    name: includeBorder
    fullName: includeBorder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeBorder: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#includeFont:member'
    summary: スタイルに、Background、Bold、Color、ColorIndex、FontStyle、Italic、Name、Size、打ち消し線、下付き、上付き、および下線のフォントプロパティを含めるかどうかを指定します。
    name: includeFont
    fullName: includeFont
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeFont: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#includeNumber:member'
    summary: スタイルに NumberFormat プロパティが含まれているかどうかを指定します。
    name: includeNumber
    fullName: includeNumber
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeNumber: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#includePatterns:member'
    summary: スタイルに、Color、ColorIndex、InvertIfNegative、Pattern、Pattern Color、および PatternColorIndex interior プロパティが含まれるかどうかを指定します。
    name: includePatterns
    fullName: includePatterns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includePatterns: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#includeProtection:member'
    summary: スタイルに FormulaHidden および Locked 保護のプロパティが含まれるかどうかを指定します。
    name: includeProtection
    fullName: includeProtection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeProtection: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#indentLevel:member'
    summary: スタイルのインデント レベルを示す 0 から 250 の範囲内の整数。
    name: indentLevel
    fullName: indentLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'indentLevel: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Style#load:member(1)'
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、を呼び出す必要があり `context.sync()` ます。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let style = context.workbook.styles.getItem("Diagonal Orientation Style");            
              style.load("textOrientation, horizontalAlignment, autoIndent, readingOrder, wrapText, includeProtection, shrinkToFit, locked");

              await context.sync();

              console.log("Orientation: " + style.textOrientation);
              console.log("Horizontal alignment: " + style.horizontalAlignment);
              console.log("Add indent: " + style.autoIndent);
              console.log("Reading order: " + style.readingOrder);
              console.log("Wrap text: " + style.wrapText);
              console.log("Include protection: " + style.includeProtection);
              console.log("Shrink to fit: " + style.shrinkToFit);
              console.log("Style locked: " + style.locked);
          }
          ```
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Style#locked:member'
    summary: ワークシートが保護されているときに、オブジェクトをロックするかどうかを指定します。
    name: locked
    fullName: locked
    langs:
      - typeScript
    type: property
    syntax:
      content: 'locked: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#name:member'
    summary: スタイルの名前。
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Style#numberFormat:member'
    summary: スタイルで適用される数値形式の表示形式コード。
    name: numberFormat
    fullName: numberFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormat: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Style#numberFormatLocal:member'
    summary: スタイルで適用される数値形式のローカライズされた表示形式コード。
    name: numberFormatLocal
    fullName: numberFormatLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormatLocal: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Style#readingOrder:member'
    summary: スタイルで適用される読み上げ順序。
    name: readingOrder
    fullName: readingOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readingOrder: ReadingOrder | "Context" | "LeftToRight" | "RightToLeft";'
      return:
        type:
          - 'excel!Excel.Style#readingOrder~0:complex'
  - uid: 'excel!Excel.Style#shrinkToFit:member'
    summary: 使用可能な列幅に合わせて、テキストを自動的に縮小するかどうかを指定します。
    name: shrinkToFit
    fullName: shrinkToFit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shrinkToFit: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#textOrientation:member'
    summary: スタイルで適用されるテキストの向き。
    name: textOrientation
    fullName: textOrientation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textOrientation: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Style#verticalAlignment:member'
    summary: スタイルの垂直方向の配置を指定します。 詳細については、「Excel の配置」を参照してください。
    name: verticalAlignment
    fullName: verticalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        verticalAlignment:
                    | VerticalAlignment
                    | "Top"
                    | "Center"
                    | "Bottom"
                    | "Justify"
                    | "Distributed";
      return:
        type:
          - 'excel!Excel.Style#verticalAlignment~0:complex'
  - uid: 'excel!Excel.Style#wrapText:member'
    summary: Excel でオブジェクトのテキストを折り返すかどうかを指定します。
    name: wrapText
    fullName: wrapText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'wrapText: boolean;'
      return:
        type:
          - boolean
references:
  - uid: 'excel!Excel.RangeBorderCollection:interface'
    name: RangeBorderCollection
    fullName: Excel.RangeBorderCollection
  - uid: 'excel!Excel.RangeFill:interface'
    name: RangeFill
    fullName: Excel.RangeFill
  - uid: 'excel!Excel.RangeFont:interface'
    name: RangeFont
    fullName: Excel.RangeFont
  - uid: 'excel!Excel.Style#horizontalAlignment~0:complex'
    name: |-
      | HorizontalAlignment
                  | "General"
                  | "Left"
                  | "Center"
                  | "Right"
                  | "Fill"
                  | "Justify"
                  | "CenterAcrossSelection"
                  | "Distributed"
    fullName: |-
      | Excel.HorizontalAlignment
                  | "General"
                  | "Left"
                  | "Center"
                  | "Right"
                  | "Fill"
                  | "Justify"
                  | "CenterAcrossSelection"
                  | "Distributed"
    spec.typeScript:
      - name: '| '
        fullName: '| '
      - uid: 'excel!Excel.HorizontalAlignment:enum'
        name: HorizontalAlignment
        fullName: Excel.HorizontalAlignment
      - name: |2-

                      | "General"
                      | "Left"
                      | "Center"
                      | "Right"
                      | "Fill"
                      | "Justify"
                      | "CenterAcrossSelection"
                      | "Distributed"
        fullName: |2-

                      | "General"
                      | "Left"
                      | "Center"
                      | "Right"
                      | "Fill"
                      | "Justify"
                      | "CenterAcrossSelection"
                      | "Distributed"
  - uid: 'excel!Excel.Style#readingOrder~0:complex'
    name: ReadingOrder | "Context" | "LeftToRight" | "RightToLeft"
    fullName: Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft"
    spec.typeScript:
      - uid: 'excel!Excel.ReadingOrder:enum'
        name: ReadingOrder
        fullName: Excel.ReadingOrder
      - name: ' | "Context" | "LeftToRight" | "RightToLeft"'
        fullName: ' | "Context" | "LeftToRight" | "RightToLeft"'
  - uid: 'excel!Excel.Style#verticalAlignment~0:complex'
    name: |-
      | VerticalAlignment
                  | "Top"
                  | "Center"
                  | "Bottom"
                  | "Justify"
                  | "Distributed"
    fullName: |-
      | Excel.VerticalAlignment
                  | "Top"
                  | "Center"
                  | "Bottom"
                  | "Justify"
                  | "Distributed"
    spec.typeScript:
      - name: '| '
        fullName: '| '
      - uid: 'excel!Excel.VerticalAlignment:enum'
        name: VerticalAlignment
        fullName: Excel.VerticalAlignment
      - name: |2-

                      | "Top"
                      | "Center"
                      | "Bottom"
                      | "Justify"
                      | "Distributed"
        fullName: |2-

                      | "Top"
                      | "Center"
                      | "Bottom"
                      | "Justify"
                      | "Distributed"