### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableColumn:interface'
    summary: テーブル内にある 1 つの列を表します。
    name: Excel.TableColumn
    fullName: Excel.TableColumn
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.TableColumn#delete:member(1)'
      - 'excel!Excel.TableColumn#filter:member'
      - 'excel!Excel.TableColumn#getDataBodyRange:member(1)'
      - 'excel!Excel.TableColumn#getHeaderRowRange:member(1)'
      - 'excel!Excel.TableColumn#getRange:member(1)'
      - 'excel!Excel.TableColumn#getTotalRowRange:member(1)'
      - 'excel!Excel.TableColumn#id:member'
      - 'excel!Excel.TableColumn#index:member'
      - 'excel!Excel.TableColumn#load:member(1)'
      - 'excel!Excel.TableColumn#name:member'
  - uid: 'excel!Excel.TableColumn#delete:member(1)'
    summary: テーブルから列を削除します。
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.TableColumn#filter:member'
    summary: 列に適用されるフィルターを取得します。
    name: filter
    fullName: filter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filter: Filter;'
      return:
        type:
          - 'excel!Excel.Filter:interface'
  - uid: 'excel!Excel.TableColumn#getDataBodyRange:member(1)'
    summary: 列のデータ本体に関連付けられた範囲オブジェクトを取得します。
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Range;'
      return:
        type:
          - 'excel!Excel.Range:interface'
        description: ''
  - uid: 'excel!Excel.TableColumn#getHeaderRowRange:member(1)'
    summary: 列のヘッダー行に関連付けられた範囲オブジェクトを取得します。
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Range;'
      return:
        type:
          - 'excel!Excel.Range:interface'
        description: ''
  - uid: 'excel!Excel.TableColumn#getRange:member(1)'
    summary: 列全体に関連付けられた範囲オブジェクトを取得します。
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Range;'
      return:
        type:
          - 'excel!Excel.Range:interface'
        description: ''
  - uid: 'excel!Excel.TableColumn#getTotalRowRange:member(1)'
    summary: 列の集計行に関連付けられた範囲オブジェクトを取得します。
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Range;'
      return:
        type:
          - 'excel!Excel.Range:interface'
        description: ''
  - uid: 'excel!Excel.TableColumn#id:member'
    summary: テーブル内の列を識別する一意のキーを返します。
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableColumn#index:member'
    summary: テーブルの列コレクション内の列のインデックス番号を返します。 0 を起点とする番号になります。
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableColumn#load:member(1)'
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、を呼び出す必要があり `context.sync()` ます。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableColumn#name:member'
    summary: テーブルの列の名前を指定します。
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
references:
  - uid: 'excel!Excel.Filter:interface'
    name: Filter
    fullName: Excel.Filter
  - uid: 'excel!Excel.Range:interface'
    name: Range
    fullName: Excel.Range