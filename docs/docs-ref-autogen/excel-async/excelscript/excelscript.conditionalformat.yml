### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalFormat:interface'
    summary: '条件付き書式の範囲、形式、ルール、およびその他のプロパティをカプセル化するオブジェクト。 条件付き書式のオブジェクトモデルの詳細については、「 [Excel 範囲に条件付き書式を適用する](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-conditional-formatting)」を参照してください。<!-- -->.'
    name: Excel.ConditionalFormat
    fullName: Excel.ConditionalFormat
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.ConditionalFormat#cellValue:member'
      - 'excel!Excel.ConditionalFormat#cellValueOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#colorScale:member'
      - 'excel!Excel.ConditionalFormat#colorScaleOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#custom:member'
      - 'excel!Excel.ConditionalFormat#customOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#dataBar:member'
      - 'excel!Excel.ConditionalFormat#dataBarOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#delete:member(1)'
      - 'excel!Excel.ConditionalFormat#getRange:member(1)'
      - 'excel!Excel.ConditionalFormat#getRangeOrNullObject:member(1)'
      - 'excel!Excel.ConditionalFormat#getRanges:member(1)'
      - 'excel!Excel.ConditionalFormat#iconSet:member'
      - 'excel!Excel.ConditionalFormat#iconSetOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#id:member'
      - 'excel!Excel.ConditionalFormat#load:member(1)'
      - 'excel!Excel.ConditionalFormat#preset:member'
      - 'excel!Excel.ConditionalFormat#presetOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#priority:member'
      - 'excel!Excel.ConditionalFormat#stopIfTrue:member'
      - 'excel!Excel.ConditionalFormat#textComparison:member'
      - 'excel!Excel.ConditionalFormat#textComparisonOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#topBottom:member'
      - 'excel!Excel.ConditionalFormat#topBottomOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#type:member'
  - uid: 'excel!Excel.ConditionalFormat#cellValue:member'
    summary: 現在の条件付き書式が CellValue 型の場合は、セル値の条件付き書式プロパティを返します。 たとえば、5 ~ 10 の範囲のすべてのセルの書式を設定します。
    name: cellValue
    fullName: cellValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellValue: CellValueConditionalFormat;'
      return:
        type:
          - 'excel!Excel.CellValueConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#cellValueOrNullObject:member'
    summary: 現在の条件付き書式が CellValue 型の場合は、セル値の条件付き書式プロパティを返します。 たとえば、5 ~ 10 の範囲のすべてのセルの書式を設定します。
    name: cellValueOrNullObject
    fullName: cellValueOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellValueOrNullObject: CellValueConditionalFormat;'
      return:
        type:
          - 'excel!Excel.CellValueConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#colorScale:member'
    summary: 現在の条件付き書式が ColorScale 型の場合は、ColorScale 条件付き書式プロパティを返します。
    name: colorScale
    fullName: colorScale
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly colorScale: ColorScaleConditionalFormat;'
      return:
        type:
          - 'excel!Excel.ColorScaleConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#colorScaleOrNullObject:member'
    summary: 現在の条件付き書式が ColorScale 型の場合は、ColorScale 条件付き書式プロパティを返します。
    name: colorScaleOrNullObject
    fullName: colorScaleOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly colorScaleOrNullObject: ColorScaleConditionalFormat;'
      return:
        type:
          - 'excel!Excel.ColorScaleConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#custom:member'
    summary: 現在の条件付き書式がカスタム型の場合は、カスタムの条件付き書式プロパティを返します。
    name: custom
    fullName: custom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly custom: CustomConditionalFormat;'
      return:
        type:
          - 'excel!Excel.CustomConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#customOrNullObject:member'
    summary: 現在の条件付き書式がカスタム型の場合は、カスタムの条件付き書式プロパティを返します。
    name: customOrNullObject
    fullName: customOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly customOrNullObject: CustomConditionalFormat;'
      return:
        type:
          - 'excel!Excel.CustomConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#dataBar:member'
    summary: 現在の条件付き書式がデータバーの場合、データバーのプロパティを返します。
    name: dataBar
    fullName: dataBar
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataBar: DataBarConditionalFormat;'
      return:
        type:
          - 'excel!Excel.DataBarConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#dataBarOrNullObject:member'
    summary: 現在の条件付き書式がデータバーの場合、データバーのプロパティを返します。
    name: dataBarOrNullObject
    fullName: dataBarOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataBarOrNullObject: DataBarConditionalFormat;'
      return:
        type:
          - 'excel!Excel.DataBarConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#delete:member(1)'
    summary: この条件付き書式を削除します。
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.ConditionalFormat#getRange:member(1)'
    summary: 条件付き書式が適用された範囲を返す。 複数の範囲に条件付き書式を適用すると、エラーがスローされます。
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Range;'
      return:
        type:
          - 'excel!Excel.Range:interface'
        description: ''
  - uid: 'excel!Excel.ConditionalFormat#getRangeOrNullObject:member(1)'
    summary: Conditonal 書式が適用される範囲を返します。または、複数の範囲に条件付き書式が適用されている場合は、null オブジェクトを返します。
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Range;'
      return:
        type:
          - 'excel!Excel.Range:interface'
        description: ''
  - uid: 'excel!Excel.ConditionalFormat#getRanges:member(1)'
    summary: 1 つまたは複数の長方形範囲で構成され、条件付き書式が適用された RangeAreas を返します。
    name: getRanges()
    fullName: getRanges()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRanges(): RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:interface'
        description: ''
  - uid: 'excel!Excel.ConditionalFormat#iconSet:member'
    summary: 現在の条件付き書式が IconSet 型の場合は、IconSet 条件付き書式プロパティを返します。
    name: iconSet
    fullName: iconSet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly iconSet: IconSetConditionalFormat;'
      return:
        type:
          - 'excel!Excel.IconSetConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#iconSetOrNullObject:member'
    summary: 現在の条件付き書式が IconSet 型の場合は、IconSet 条件付き書式プロパティを返します。
    name: iconSetOrNullObject
    fullName: iconSetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly iconSetOrNullObject: IconSetConditionalFormat;'
      return:
        type:
          - 'excel!Excel.IconSetConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#id:member'
    summary: 現在の ConditionalFormatCollection 内での条件付き書式の優先順位。
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalFormat#load:member(1)'
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、を呼び出す必要があり `context.sync()` ます。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalFormat#preset:member'
    summary: 事前設定の条件の条件付き書式を返します。 詳細については、「PresetCriteriaConditionalFormat」を参照してください。
    name: preset
    fullName: preset
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly preset: PresetCriteriaConditionalFormat;'
      return:
        type:
          - 'excel!Excel.PresetCriteriaConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#presetOrNullObject:member'
    summary: 事前設定の条件の条件付き書式を返します。 詳細については、「PresetCriteriaConditionalFormat」を参照してください。
    name: presetOrNullObject
    fullName: presetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly presetOrNullObject: PresetCriteriaConditionalFormat;'
      return:
        type:
          - 'excel!Excel.PresetCriteriaConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#priority:member'
    summary: この条件付き書式が現在存在している条件付き書式コレクション内の優先度 (またはインデックス)。 これを変更すると、他の条件付き書式の優先度も変更され、連続した優先順位を使用できるようになります。 最背面から開始するには、負の優先順位を使用します。 範囲よりも大きい優先度が取得され、最大値 (負の場合は負の値) に設定されます。 また、優先度を変更する場合は、変更を加える必要がある場合は、新しい優先度の場所でオブジェクトの新しいコピーを取得し直す必要があることにも注意してください。
    name: priority
    fullName: priority
    langs:
      - typeScript
    type: property
    syntax:
      content: 'priority: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ConditionalFormat#stopIfTrue:member'
    summary: この条件付き書式の条件が満たされた場合、優先順位の低い書式はそのセルに影響を及ぼしません。 このような stop Iftrue の概念が存在しないため、(a) を使用する場合は、(a)
    name: stopIfTrue
    fullName: stopIfTrue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'stopIfTrue: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ConditionalFormat#textComparison:member'
    summary: 現在の条件付き書式がテキスト型の場合、特定のテキスト条件付き書式プロパティを返します。 たとえば、"Text" という単語に一致するセルの書式を設定します。
    name: textComparison
    fullName: textComparison
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly textComparison: TextConditionalFormat;'
      return:
        type:
          - 'excel!Excel.TextConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#textComparisonOrNullObject:member'
    summary: 現在の条件付き書式がテキスト型の場合、特定のテキスト条件付き書式プロパティを返します。 たとえば、"Text" という単語に一致するセルの書式を設定します。
    name: textComparisonOrNullObject
    fullName: textComparisonOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly textComparisonOrNullObject: TextConditionalFormat;'
      return:
        type:
          - 'excel!Excel.TextConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#topBottom:member'
    summary: 現在の条件付き書式が TopBottom 型の場合、上位/下位条件付き書式プロパティを返します。 たとえば、上位10% または下位10個のアイテムを書式設定します。
    name: topBottom
    fullName: topBottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly topBottom: TopBottomConditionalFormat;'
      return:
        type:
          - 'excel!Excel.TopBottomConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#topBottomOrNullObject:member'
    summary: 現在の条件付き書式が TopBottom 型の場合、上位/下位条件付き書式プロパティを返します。 たとえば、上位10% または下位10個のアイテムを書式設定します。
    name: topBottomOrNullObject
    fullName: topBottomOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly topBottomOrNullObject: TopBottomConditionalFormat;'
      return:
        type:
          - 'excel!Excel.TopBottomConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#type:member'
    summary: 条件付き書式の種類を指定します。 一度に設定できるのは1つだけです。
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        readonly type:
                    | ConditionalFormatType
                    | "Custom"
                    | "DataBar"
                    | "ColorScale"
                    | "IconSet"
                    | "TopBottom"
                    | "PresetCriteria"
                    | "ContainsText"
                    | "CellValue";
      return:
        type:
          - 'excel!Excel.ConditionalFormat#type~0:complex'
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let worksheetRange = sheet.getRange();
              worksheetRange.conditionalFormats.load("type");

              await context.sync();

              let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];
              worksheetRange.conditionalFormats.items.forEach(item => {
                  cfRangePairs.push({
                      cf: item,
                      range: item.getRange().load("address")
                  });
              });

              await context.sync();

              if (cfRangePairs.length > 0) {
                  cfRangePairs.forEach(item => {
                      console.log(item.cf.type);
                  });
              } else {
                  console.log("No conditional formats applied.");
              }
          }
          ```
references:
  - uid: 'excel!Excel.CellValueConditionalFormat:interface'
    name: CellValueConditionalFormat
    fullName: Excel.CellValueConditionalFormat
  - uid: 'excel!Excel.ColorScaleConditionalFormat:interface'
    name: ColorScaleConditionalFormat
    fullName: Excel.ColorScaleConditionalFormat
  - uid: 'excel!Excel.CustomConditionalFormat:interface'
    name: CustomConditionalFormat
    fullName: Excel.CustomConditionalFormat
  - uid: 'excel!Excel.DataBarConditionalFormat:interface'
    name: DataBarConditionalFormat
    fullName: Excel.DataBarConditionalFormat
  - uid: 'excel!Excel.Range:interface'
    name: Range
    fullName: Excel.Range
  - uid: 'excel!Excel.RangeAreas:interface'
    name: RangeAreas
    fullName: Excel.RangeAreas
  - uid: 'excel!Excel.IconSetConditionalFormat:interface'
    name: IconSetConditionalFormat
    fullName: Excel.IconSetConditionalFormat
  - uid: 'excel!Excel.PresetCriteriaConditionalFormat:interface'
    name: PresetCriteriaConditionalFormat
    fullName: Excel.PresetCriteriaConditionalFormat
  - uid: 'excel!Excel.TextConditionalFormat:interface'
    name: TextConditionalFormat
    fullName: Excel.TextConditionalFormat
  - uid: 'excel!Excel.TopBottomConditionalFormat:interface'
    name: TopBottomConditionalFormat
    fullName: Excel.TopBottomConditionalFormat
  - uid: 'excel!Excel.ConditionalFormat#type~0:complex'
    name: |-
      | ConditionalFormatType
                  | "Custom"
                  | "DataBar"
                  | "ColorScale"
                  | "IconSet"
                  | "TopBottom"
                  | "PresetCriteria"
                  | "ContainsText"
                  | "CellValue"
    fullName: |-
      | Excel.ConditionalFormatType
                  | "Custom"
                  | "DataBar"
                  | "ColorScale"
                  | "IconSet"
                  | "TopBottom"
                  | "PresetCriteria"
                  | "ContainsText"
                  | "CellValue"
    spec.typeScript:
      - name: '| '
        fullName: '| '
      - uid: 'excel!Excel.ConditionalFormatType:enum'
        name: ConditionalFormatType
        fullName: Excel.ConditionalFormatType
      - name: |2-

                      | "Custom"
                      | "DataBar"
                      | "ColorScale"
                      | "IconSet"
                      | "TopBottom"
                      | "PresetCriteria"
                      | "ContainsText"
                      | "CellValue"
        fullName: |2-

                      | "Custom"
                      | "DataBar"
                      | "ColorScale"
                      | "IconSet"
                      | "TopBottom"
                      | "PresetCriteria"
                      | "ContainsText"
                      | "CellValue"