### YamlMime:TSType
name: Excel.CustomXmlPartCollection
uid: excel!Excel.CustomXmlPartCollection:interface
package: excel!
fullName: Excel.CustomXmlPartCollection
summary: カスタム XML パーツのコレクション。
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: add(xml)
  uid: excel!Excel.CustomXmlPartCollection#add:member(1)
  package: excel!
  fullName: add(xml)
  summary: ブックに新しいカスタム XML パーツを追加します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'add(xml: string): CustomXmlPart;'
    parameters:
    - id: xml
      description: XML コンテンツ。 有効な XML フラグメントである必要があります。
      type: string
    return:
      type: <xref uid="excel!Excel.CustomXmlPart:interface" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    // You must have the xmlns attribute to populate the \n    // CustomXml.namespaceUri property.\n    let originalXml = \"<Reviewers xmlns='http://schemas.contoso.com/review/1.0'><Reviewer>Juan</Reviewer><Reviewer>Hong</Reviewer><Reviewer>Sally</Reviewer></Reviewers>\";\n    let customXmlPart = context.workbook.customXmlParts.add(originalXml);\n    customXmlPart.load(\"id\");\n    let xmlBlob = customXmlPart.getXml();\n\n    await context.sync();\n\n    let readableXml = addLineBreaksToXML(xmlBlob.value);\n    $(\"#display-xml\").text(readableXml);\n\n    // Store the XML part's ID in a setting.\n    let settings = context.workbook.settings;\n    settings.add(\"ContosoReviewXmlPartId\", customXmlPart.id);\n\n    await context.sync();\n}\n```"
- name: getByNamespace(namespaceUri)
  uid: excel!Excel.CustomXmlPartCollection#getByNamespace:member(1)
  package: excel!
  fullName: getByNamespace(namespaceUri)
  summary: 名前空間が指定した名前空間に一致する、カスタム XML パーツの新しい範囲のコレクションを取得します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getByNamespace(namespaceUri: string): CustomXmlPartScopedCollection;'
    parameters:
    - id: namespaceUri
      description: これは完全修飾スキーマ URI である必要があります。たとえば、" http://schemas.contoso.com/review/1.0 " などです。
      type: string
    return:
      type: <xref uid="excel!Excel.CustomXmlPartScopedCollection:interface" />
      description: ''
- name: getCount()
  uid: excel!Excel.CustomXmlPartCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: コレクションに含まれる CustomXml パーツの数を取得します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): ClientResult<number>;'
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;
      description: ''
- name: getItem(id)
  uid: excel!Excel.CustomXmlPartCollection#getItem:member(1)
  package: excel!
  fullName: getItem(id)
  summary: ID に基づいて、カスタム XML パーツを取得します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(id: string): CustomXmlPart;'
    parameters:
    - id: id
      description: 取得するオブジェクトの ID を指定します。
      type: string
    return:
      type: <xref uid="excel!Excel.CustomXmlPart:interface" />
      description: ''
- name: getItemOrNullObject(id)
  uid: excel!Excel.CustomXmlPartCollection#getItemOrNullObject:member(1)
  package: excel!
  fullName: getItemOrNullObject(id)
  summary: ID に基づいて、カスタム XML パーツを取得します。 CustomXmlPart が存在しない場合、返されるオブジェクトの isNull プロパティは true になります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(id: string): CustomXmlPart;'
    parameters:
    - id: id
      description: 取得するオブジェクトの ID を指定します。
      type: string
    return:
      type: <xref uid="excel!Excel.CustomXmlPart:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.CustomXmlPartCollection#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 4f760ed0ebe75334c8367395afe651424c34f644
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49416338"
